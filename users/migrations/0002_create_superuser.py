# Generated by Django ...
from django.db import migrations
from django.contrib.auth.models import User
from django.contrib.auth.management.commands.createsuperuser import get_username_default
import os

def create_superuser(apps, schema_editor):
    """
    Creates a superuser if one doesn't exist.
    Credentials are pulled from environment variables.
    """
    # Get credentials from environment variables
    # Use .get() to avoid errors if the variable is not set
    username = os.environ.get('DJANGO_SUPERUSER_USERNAME')
    email = os.environ.get('DJANGO_SUPERUSER_EMAIL')
    password = os.environ.get('DJANGO_SUPERUSER_PASSWORD')

    if not username or not password:
        print("Superuser creation skipped: DJANGO_SUPERUSER_USERNAME or DJANGO_SUPERUSER_PASSWORD not set.")
        return

    # Get the User model
    User = apps.get_model('auth', 'User')

    # Check if a superuser already exists
    if User.objects.filter(is_superuser=True).exists():
        print("Superuser creation skipped: Superuser already exists.")
        return

    # Create the superuser
    User.objects.create_superuser(
        username=username,
        email=email,
        password=password
    )
    print(f"Superuser '{username}' created successfully.")


class Migration(migrations.Migration):

    dependencies = [
        ('myapp', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_superuser),
    ]
